version: '3.8'

services:
  frontend:
    build:
      context: ./adminpanel
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      backend1:
        condition: service_started
      backend2:
        condition: service_started
      apigateway:
        condition: service_started
    networks:
      - khasimansa-network

  backend1:
    build:
      context: ./khasimansa
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/khasimansa
      SPRING_DATASOURCE_USERNAME: khasimansa
      SPRING_DATASOURCE_PASSWORD: root
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka
    depends_on:
      db:
        condition: service_started
      eurekaserver:
        condition: service_healthy
    networks:
      - khasimansa-network

  backend2:
    build:
      context: ./khasimansaproduct
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/khasimansa
      SPRING_DATASOURCE_USERNAME: khasimansa
      SPRING_DATASOURCE_PASSWORD: root
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka

    depends_on:
      db:
        condition: service_started
      eurekaserver:
        condition: service_healthy
    networks:
      - khasimansa-network

  apigateway:
    build:
      context: ./khasimansaApiGateWay
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka
    depends_on:
      backend1:
        condition: service_started
      backend2:
        condition: service_started
      eurekaserver:
        condition: service_healthy
    networks:
      - khasimansa-network

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: khasimansa
      POSTGRES_USER: khasimansa
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    networks:
      - khasimansa-network

  eurekaserver:
    build:
      context: ./khasimansaEurekaServer
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    hostname: eurekaserver
    networks:
      - khasimansa-network
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://127.0.0.1:8761/eureka/apps || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

networks:
  khasimansa-network:
    driver: bridge
